import { AccelerometerTemplate } from './accelerometer';
import { AIVisionSensorTemplate } from './aiVisionSensor';
import { IndoorAmbienceSensorTemplate } from './indoorAmbienceSensor';
import { LoRaControllerTemplate } from './loraController';
import { ModbusControllerTemplate } from './modbusController';
import { PowerSocketTemplate } from './powerSocket';
import { SmartLightControllerTemplate } from './smartLightController';
import { SoundLevelSensorTemplate } from './soundLevelSensor';
import { UltrasonicDistanceSensorTemplate } from './ultrasonicDistanceSensor';

const fse = require('fs-extra');

const blueprint = [
    AccelerometerTemplate,
    AIVisionSensorTemplate,
    IndoorAmbienceSensorTemplate,
    LoRaControllerTemplate,
    ModbusControllerTemplate,
    PowerSocketTemplate,
    SmartLightControllerTemplate,
    SoundLevelSensorTemplate,
    UltrasonicDistanceSensorTemplate,
];
const stringifiedBlueprint = JSON.stringify(blueprint);
const FILE_NAME = 'blueprint.md';

fse.writeFile(
    FILE_NAME,
    `
# Warning: **Do not edit this file directly**

# Info
- See the README.md to know how to generate a new blueprint
- Copy the json below to update the blueprint attribute in the relevant UsecaseConfig entity
---

${stringifiedBlueprint}
`,
    function (err: any) {
        if (err) throw err;
        console.log('Blueprint Saved');

        const SPECIFIC_USECASE_PATH = __dirname.split('dist\\')[1];
        const from = `./${FILE_NAME}`;
        const to = `../../../src/${SPECIFIC_USECASE_PATH}/${FILE_NAME}`;
        fse.move(from, to, { overwrite: true }, (err: any) => {
            if (err) return console.error(err);
            console.log('Blueprint moved to: ', to);
        });
    }
);
